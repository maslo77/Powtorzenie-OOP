#include <iostream>
using namespace std;
template<typename T>
class SmartPtr{
    T *ptr;
public:
    SmartPtr(T *ptr = NULL){
        cout<<"utworzono"<<endl;
        this->ptr = ptr;
    }
    ~SmartPtr(){
        cout<<"Usunieto"<<endl;
        delete(ptr);
    }
   T *operator ->(){
    return ptr;
   }
   T &operator*(){
       return *ptr;
   }
};

int main()
{
    SmartPtr<float> ptr(new float());
    *ptr = 62;
    cout<<*ptr<<endl;
    return 0;
}
